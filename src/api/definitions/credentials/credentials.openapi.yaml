openapi: '3.0.0'
info:
  version: 1.0.0
  title: Swagger Sample
  license:
    name: MIT
servers:
  - url: http://petstore.swagger.io/v1
paths:
  /Security/GetToken:
    post:
      summary: Get app token
      operationId: getAppToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/GetTokenRequest'
      responses:
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTokenResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /Security/AuthenticationPortal:
    post:
      summary: User login
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/LoginRequest'
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    GetTokenResponse:
      type: object
      required:
        - token
        - expireDate
      properties:
        token:
          type: string
        expireDate:
          type: string
    GetTokenRequest:
      type: object
      required:
        - UserName
        - Password
      properties:
        UserName:
          type: string
        Password:
          type: string    
    LoginRequest:
      type: object
      required:
        - UserName
        - Password
      properties:
        UserName:
          type: string
        Password:
          type: string
    LoginResponse:
      type: object
      required:
        - sessionToken
        - expireDate
        - userGroup
        - userName
        - clientId
        - roles
      properties:
        sessionToken:
          type: string
        expireDate:
          type: string
        userGroup:
          type: string
        userName:
          type: string
        clientId:
          type: string
        roles:
          type: array
          items:
            type: string 
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string